import pygame
import random
import winsound
pygame.init()

screen = pygame.display.set_mode((700,500))
pygame.display.set_caption("Breakout!")
doExit = False
hitsound = pygame.mixer.Sound("bjump.mp3")
clock = pygame.time.Clock()
p1x = 320 #rect 1
p1y = 450

score = 0

hit = False

ball_size = 15
bx = 350
by = 250
bVx = 4
bVy = 4
font = pygame.font.Font('freesansbold.ttf', 32)
text1 = font.render('Score:', 1, (255, 255, 255))
text2 = font.render(str(score), 1, (255, 255, 255))
text3 = font.render('GAME OVER', 1, (217, 24, 7))
class brick:
    def __init__(self, xpos, ypos):
        self.xpos = xpos
        self.ypos = ypos
        self.color = (random.randrange(100, 250),random.randrange(100, 250),random.randrange(100, 250))
        self.isDead = False
    def draw(self):
        if not self.isDead:
            pygame.draw.rect(screen, self.color, (self.xpos, self.ypos, 75, 35))


    def collide(self, ball_x, ball_y, score1):
        if not self.isDead:
            if(ball_x + ball_size > self.xpos and 
                ball_x < self.xpos + 75 and
                ball_y + ball_size > self.ypos and
                ball_y < self.ypos + 35):
                self.isDead = True
                return True
        return False
    
b1 = brick(0, 10)
b2 = brick(90, 10)
b3 = brick(180, 10)
b4 = brick(270, 10)
b5 = brick(360, 10)
b6 = brick(450, 10)
b7 = brick(540, 10)
b8 = brick(630, 10)
b9 = brick(0, 60)
b10 = brick(90, 60)
b11 = brick(180, 60)
b12 = brick(270, 60)
b13 = brick(360, 60)
b14 = brick(450, 60)
b15 = brick(540, 60)
b16 = brick(630, 60)


while not doExit:
   
    clock.tick(60)
   
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            doExit = True
   
#game logic ------------

     
    keys = pygame.key.get_pressed()
    if keys[pygame.K_a]:
        p1x-=5
    if keys[pygame.K_d]:
        p1x+=5
       
       
    bx += bVx
    by += bVy

    if (bx + ball_size > p1x and 
            bx < p1x + 100 and
            by + ball_size > p1y and
            by < p1y + 20):
                bVy *= -1
                print("collision")
    #if bx < p1x + 20 and by + 20 < p1y and by < p1y + 100:
            #bVx *= -1    
   
    if bx < 10 or bx + 15 > 700:
            bVx *= -1
    if by < 10 or by + 15 < 0:
            bVy *= -1
    print(bx, by)

           
#render --------------------------------------------------------

    screen.fill((0,0,0))
    if by < 0 or by + 15 > 500: 
        screen.blit(text3, (250, 250))
        #pygame.time.delay(3000)
        #pygame.quit()
        
    if b1.collide(bx, by, score):
        bVy *= -1
        hitsound.play()
        score+=10
    if b2.collide(bx, by, score):
        bVy*= -1
        hitsound.play()
        score+=10
    if b3.collide(bx, by, score):
        bVy*= -1
        hitsound.play()
        score+=10
    if b4.collide(bx, by, score):
        bVy *= -1
        hitsound.play()
        score+=10
    if b5.collide(bx, by, score):
        bVy *= -1
        hitsound.play()
        score+=10
    if b6.collide(bx, by, score):
        bVy *= -1
        hitsound.play()
        score+=10
    if b7.collide(bx, by, score):
        bVy *= -1
        hitsound.play()

    if b8.collide(bx, by, score):
        bVy *= -1
        hitsound.play()
        score+=10
    if b9.collide(bx, by, score):
        bVy *= -1
        hitsound.play()
        score+=10
    if b10.collide(bx, by, score):
        bVy*= -1
        hitsound.play()
        score+=10
    if b11.collide(bx, by, score):
        bVy*= -1
        hitsound.play()
        score+=10
    if b12.collide(bx, by, score):
        bVy *= -1
        hitsound.play()
        score+=10
    if b13.collide(bx, by, score):
        bVy *= -1
        hitsound.play()
        score+=10
    if b14.collide(bx, by, score):
        bVy *= -1
        hitsound.play()
        score+=10
    if b15.collide(bx, by, score):
        bVy *= -1
        hitsound.play()
        score+=10
    if b16.collide(bx, by, score):
        bVy *= -1
        hitsound.play()
        score+=10

    screen.blit(text1, (550, 100))
    screen.blit(text2, (660, 100))

    b16.draw()
    b15.draw()
    b14.draw()
    b13.draw()
    b12.draw()    
    b11.draw()
    b10.draw()    
    b9.draw()
    b8.draw()
    b7.draw()
    b6.draw()
    b5.draw()
    b4.draw()
    b3.draw()
    b2.draw()
    b1.draw()
    
    pygame.draw.rect(screen, (255, 255, 255), (p1x, p1y, 100, 20))
    pygame.draw.circle(screen, (255, 255, 255), (bx, by), ball_size)
    pygame.display.flip()
